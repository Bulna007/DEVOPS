What is cloud computing or cloud platform?
Cloud computing or cloud platform is all about on-demand delivery of computing services/resources to the world.
	
Here the computing services refers to:
1. Infrastructure (Computers/Network etc)
2. Firewall
3. Security devices
4. Platform Softwares (Database servers..) 
	
What is an software application?
For an business organization or an enterprise to conduct or provide business services to their customers around the world, they need software applications, because manually providing the business services has lot of limitations or dis-advantages
1. The pace at which the business services are offered to the customers will be very slow
2. reachability of the services to the customers will be limited to the physical location where the business is operating
3. accuracy in offering the services will not be high
4. fraud elimination is very difficult
etc

To overcome these limitations in offering the business services, we need software application.
	
A software application comprises of bunch of programs written or developed using programming languages (java/.net/scala/python..)	by the developers based inorder to fulfill the requirements of the business in offering the services to their customers.
	
upon developing the software application, it needs to be hosted/delivered to the endusers/business, so that it becomes accessible and usable. Inorder to delivery the software application we need
1. Infrastructure
2. Networking resources
3. Platform software
etc

The cloud computing offers such computing services/resources on-demand, so that the business can leverage them in delivering the applications quickly and make them reach to the market


How does the software applications are delivered?
The process of delivering the software applications purely depends on the type of the application. There are broadly #4 types of applications are there
1. Standalone / desktop / Thick-client applications
2. (Enterprise) Distributed Web Applications
3. Mobile Applications
4. Batch processing Applications


1. Standalone / Desktop / Thick-client Application 
These software applications needs to be downloaded from the software distribution vendor, installed locally the computer system where we want to use them. These applications run locally on the computer where we are using them, uses the system resources like cpu, ram, storage etc. These are even called "single-user" applications as at anytime only one user of the computer only can use the software application locally.
For eg..
	1. mspaint
	2. ms-office
	3. calculator
	4. notepad/textpad
	etc
	
The business organization inorder to deliver these applications to the customers, they all just need to do is make them downloadable, so that customers can download, install and use it locally on their computer

#2. Distributed Web Application
In an enterprise organization, often people wants to work in groups together in mutually co-ordinating and collaborating interms of operations and data/information sharing in conducting or offering business service

For eg.. in banking or financial organizations clerks/employees of the bank across the branches wants to collaborate and share information across the branches inorder to provide banking services to the customers of the bank

For this we should not use standalone applications, because we run into lot of challenges in using them under corporate or enterprise environment as below.
1. the banking application (standalone) needs to be download and installed across all the employees machines across the branches of the bank

2. we need administration/operational team that takes care of installing, upgrading, patching and troubleshooting the software applications across all the branches of the bank

3. since these standalone applications runs locally on the machine of the user, each employee in the bank requires machine/computer with huge capacity inorder to run them. The cost of infrastructure in running the application across the branches of the bank is high

4. since each of the branch across the bank and computers being used may have different configurations and platforms, there is no guarantee the software application developed by the developers runs across all these platforms, so that both development teams and operational teams has to spend lot of time in debugging and trouble shooting the application when it failed

5. Each time a new version of the application with more features are released, the new version needs to be installed across all the machines of all the branches which is tedious job

6. The data that is generated by the application is stored locally on the machine on which the application is running and hence the data cannot be accessed by other employees of the branch or bank across.


To overcome the above problems use distributed web applications.
These distributed applications run centrally on a server-grade computer (usually on the central/head branches of the business) allowing the users to connect with them over the network in sending and receiving the input/output in using them. There are lot of advantages of using distributed web applications as below:

1. For each employee in the bank all that they need in offering banking services to their customer is an thin-client browser application, which comes as a default software in most of the operating systems (windows, linux etc)
So no need to additionally install any software locally on the computers of the employees of the bank due to which we dont need
  1.1 high-end machines for running the software, that reduces investment cost in offering banking services
  1.2 No installation, upgradation and patching of the softwares at banking employees computers
  1.2 This eliminates the huge IT operational team in maintaining the software

2. No challenges in installing, running and troubleshooting the software across different computers of different branches
3. since all the data is stored centrally on the server machine, all the employees across the branches can easily share the data and can work collaboratively.

From the above to run distributed web applications we need
1. huge Infrastructure and computer resources
2. Networking
3. Platform software like database etc

#3 Mobile Applications
The Mobile applications are built to run on small-scaled devices like mobile phones or tablet devices etc. The applications are build using mobile platform technologies like
1. ios      = swift programming
2. android  = Andriod SDK written in Kotlin language

How does the mobile applications are distributed to the customers around the world?
The mobile applications are packaged and distributed through mobile platform repositories like 	appstore in ios and playstore in android platform.
The business organization upon developing an mobile app on the respective mobile platform will publish the software into these repositories to distribute/release it to the customers around the world.
		
The users of the mobile, browse through these appstore/playstore repositories, downloads them and installs them on their mobile devices to use it.
From this the mobile applications dont need any infrastructure to run them, since those are going to run on the mobile devices of the customers itself.
		
#4 Batch processing applications
The batch processing applications performs backend operations within an organization. These applications runs at a regular interval of time and are internal to the organization, not exposed to the enduser/customer.
		
These applications deals with large volumes of data inperforming operations and reflect them against the business

How to delivery these batch applications?
1. Infrastructure
2. Networking
3. Platform software


		
		
















	
	












































	
	
	
	
	
	
	
	
	
	
	
	